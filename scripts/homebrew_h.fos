#ifndef HOMEBREW_H
#define HOMEBREW_H

#define STATE_PREPARE ( 0 )
#define STATE_WORKING ( 1 )
#define STATE_FINISH  ( 2 )

const uint PIC_POT_CLOSED = GetStrHash( "art\\items\\misc\\Still\\pot_alco.fofrm" );
const string[] SlicingSoundNames = { "Slicing1.ogg", "Slicing2.ogg", "Slicing3.ogg", "Slicing4.ogg", "Slicing5.ogg", "Slicing6.ogg", "Slicing7.ogg", "Slicing8.ogg", "Slicing9.ogg", "Slicing10.ogg",
							"Slicing11.ogg", "Slicing12.ogg", "Slicing13.ogg", "Slicing14.ogg", "Slicing15.ogg", "Slicing16.ogg", "Slicing17.ogg", "Slicing18.ogg", "Slicing19.ogg","Slicing20.ogg"};

#define STATE									Val0 	// 0 - empty; 1 - it's brewing; 2+ - finished and requires cleaning
#define CAPACITY								Val1 	// 
#define CURRENT_CAPACITY						Val2	// 
#define EVENT 									Val3 	// 
#define LIQUID_LEVEL							Val4 	//
#define STACH_LEVEL								Val5 	// 
#define SUGAR_LEVEL								Val6 	// main val
#define HB_POLUTION_LEVEL						Val7 	// can cause extreeme poisoning
#define HOMEBREW_TYPE							Val8	// see taste in client_main
#define HB_SPIRIT_LEVEL							Val9

#define MAX_SPIRIT_LEVEL 					   ( 40 )	// Max possible %% in homebrew
#define SUGAR_FERMENTING_TIME		REAL_SECOND( 3 ) 	// ticks to ferment amount below
#define SUGAR_FERMENTING_AMOUNT		           ( 10 )	// 10 in g
#define FERMENTING_MODIFIER					   ( 100 )   // % from sugar becomes spirit

#define REMAINING_USES							Val0 	// in flask
#define EXTRA_WEIGHT							Val2	// of liquid

	#ifndef HOMEBREW
		import bool ShowMenuBrew( Critter& cr, Item& target ) from "homebrew";
		import bool TransferToPot( Critter& cr, Item& targetItem, Item& cont ) from "homebrew";
		import bool TransferFromPot( Critter& cr, Item& targetItem, Item& cont ) from "homebrew";
	#endif //HOMEBREW
	
#endif //HOMEBREW_H
